{"version":3,"file":"backed.js","sources":["../src/internals/fire-event.js","../src/internals/to-js-prop.js","../src/internals/load-script.js","../src/internals/pub-sub.js","../src/internals/pub-sub-loader.js","../node_modules/lit-html/lit-html.js","../src/base.js","../src/internals/render-status.js","../src/backed.js"],"sourcesContent":["'use strict';\r\n/**\r\n * @mixin backed\r\n * @param {string} type Name of the event\r\n * @param {HTMLElement} target Name of the event\r\n * @param {string|boolean|number|object|array} detail\r\n */\r\nexport default (type=String, detail=null, target=document) => {\r\n  target.dispatchEvent(new CustomEvent(type, {detail: detail}));\r\n};\r\n","'use strict';\r\n/**\r\n * @mixin Backed\r\n *\r\n * some-prop -> someProp\r\n *\r\n * @arg {string} string The content to convert\r\n * @return {string} string\r\n */\r\nexport default string => {\r\n  let parts = string.split('-');\r\n  if (parts.length > 1) {\r\n    var upper = parts[1].charAt(0).toUpperCase();\r\n    string = parts[0] + upper + parts[1].slice(1).toLowerCase();\r\n  }\r\n  return string;\r\n};\r\n","'use strict';\nconst loadScript = src => {\n  return new Promise((resolve, reject) => {\n    let script = document.createElement('script');\n    script.src = src;\n    script.onload = result => {\n      resolve(result);\n    }\n    script.onerror = error => {\n      reject(error);\n    }\n    document.body.appendChild(script);\n  });\n}\nexport default loadScript;\n","'use strict';\r\nexport default class {\r\n\r\n  /**\r\n   * Creates handlers\r\n   */\r\n  constructor() {\r\n    this.handlers = [];\r\n  }\r\n\r\n  /**\r\n   * @param {String} event\r\n   * @param {Method} handler\r\n   * @param {HTMLElement} context\r\n   */\r\n  subscribe(event, handler, context) {\r\n    if (typeof context === 'undefined') {\r\n      context = handler;\r\n    }\r\n    this.handlers.push({event: event, handler: handler.bind(context)});\r\n  }\r\n\r\n  /**\r\n   * @param {String} event\r\n   * @param {String|Number|Boolean|Object|Array} change\n   */\r\n  publish(event, change) {\n    for (let i = 0; i < this.handlers.length; i++) {\r\n      if (this.handlers[i].event === event) {\n        let oldValue = this.handlers[i].oldValue;\n        // dirty checking value, ensures that we don't create a loop\n        if (oldValue !== change.value) {\n          this.handlers[i].handler(change, this.handlers[i].oldValue);\n          this.handlers[i].oldValue = change.value;\n        }\n      }\r\n    }\r\n  }\r\n}\r\n","'use strict';\r\nimport Pubsub from './pub-sub.js';\nexport default isWindow => {\n  if (isWindow) {\n    window.PubSub = window.PubSub || new Pubsub();\n  } else {\n    global.PubSub = global.PubSub || new Pubsub();\n  }\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nconst templates = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport function html(strings, ...values) {\n    let template = templates.get(strings);\n    if (template === undefined) {\n        template = new Template(strings);\n        templates.set(strings, template);\n    }\n    return new TemplateResult(template, values);\n}\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(template, values) {\n        this.template = template;\n        this.values = values;\n    }\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n */\nexport function render(result, container) {\n    let instance = container.__templateInstance;\n    if (instance !== undefined &&\n        instance.template === result.template &&\n        instance instanceof TemplateInstance) {\n        instance.update(result.values);\n        return;\n    }\n    instance = new TemplateInstance(result.template);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    while (container.firstChild) {\n        container.removeChild(container.firstChild);\n    }\n    container.appendChild(fragment);\n}\nconst exprMarker = '{{}}';\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\nexport class Template {\n    constructor(strings) {\n        this.parts = [];\n        this._strings = strings;\n        this._parse();\n    }\n    _parse() {\n        this.element = document.createElement('template');\n        this.element.innerHTML = this._getTemplateHtml(this._strings);\n        const walker = document.createTreeWalker(this.element.content, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const attributesToRemove = [];\n        while (walker.nextNode()) {\n            index++;\n            const node = walker.currentNode;\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                const attributes = node.attributes;\n                for (let i = 0; i < attributes.length; i++) {\n                    const attribute = attributes.item(i);\n                    const value = attribute.value;\n                    const strings = value.split(exprMarker);\n                    if (strings.length > 1) {\n                        const attributeString = this._strings[partIndex];\n                        // Trim the trailing literal value if this is an interpolation\n                        const rawNameString = attributeString.substring(0, attributeString.length - strings[0].length);\n                        const match = rawNameString.match(/((?:\\w|[.\\-_$])+)=[\"']?$/);\n                        const rawName = match[1];\n                        this.parts.push(new TemplatePart('attribute', index, attribute.name, rawName, strings));\n                        attributesToRemove.push(attribute);\n                        partIndex += strings.length - 1;\n                    }\n                }\n            }\n            else if (node.nodeType === Node.TEXT_NODE) {\n                const strings = node.nodeValue.split(exprMarker);\n                if (strings.length > 1) {\n                    // Generate a new text node for each literal and two for each part,\n                    // a start and end\n                    partIndex += strings.length - 1;\n                    for (let i = 0; i < strings.length; i++) {\n                        const string = strings[i];\n                        const literalNode = new Text(string);\n                        node.parentNode.insertBefore(literalNode, node);\n                        index++;\n                        if (i < strings.length - 1) {\n                            node.parentNode.insertBefore(new Text(), node);\n                            node.parentNode.insertBefore(new Text(), node);\n                            this.parts.push(new TemplatePart('node', index));\n                            index += 2;\n                        }\n                    }\n                    index--;\n                    nodesToRemove.push(node);\n                }\n                else if (!node.nodeValue.trim()) {\n                    nodesToRemove.push(node);\n                    index--;\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n        for (const a of attributesToRemove) {\n            a.ownerElement.removeAttribute(a.name);\n        }\n    }\n    _getTemplateHtml(strings) {\n        const parts = [];\n        for (let i = 0; i < strings.length; i++) {\n            parts.push(strings[i]);\n            if (i < strings.length - 1) {\n                parts.push(exprMarker);\n            }\n        }\n        return parts.join('');\n    }\n}\nexport class Part {\n    constructor(instance) {\n        this.instance = instance;\n    }\n    _getValue(value) {\n        if (typeof value === 'function') {\n            try {\n                value = value(this);\n            }\n            catch (e) {\n                console.error(e);\n                return;\n            }\n        }\n        if (value === null) {\n            // `null` as the value of Text node will render the string 'null'\n            return undefined;\n        }\n        return value;\n    }\n}\nexport class AttributePart extends Part {\n    constructor(instance, element, name, strings) {\n        super(instance);\n        console.assert(element.nodeType === Node.ELEMENT_NODE);\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(values) {\n        const strings = this.strings;\n        let text = '';\n        for (let i = 0; i < strings.length; i++) {\n            text += strings[i];\n            if (i < strings.length - 1) {\n                const v = this._getValue(values[i]);\n                if (v && typeof v !== 'string' && v[Symbol.iterator]) {\n                    for (const t of v) {\n                        // TODO: we need to recursively call getValue into iterables...\n                        text += t;\n                    }\n                }\n                else {\n                    text += v;\n                }\n            }\n        }\n        this.element.setAttribute(this.name, text);\n    }\n    get size() {\n        return this.strings.length - 1;\n    }\n}\nexport class NodePart extends Part {\n    constructor(instance, startNode, endNode) {\n        super(instance);\n        this.startNode = startNode;\n        this.endNode = endNode;\n    }\n    setValue(value) {\n        value = this._getValue(value);\n        if (value instanceof Node) {\n            this._previousValue = this._setNodeValue(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._previousValue = this._setTemplateResultValue(value);\n        }\n        else if (value && value.then !== undefined) {\n            value.then((v) => {\n                if (this._previousValue === value) {\n                    this.setValue(v);\n                }\n            });\n            this._previousValue = value;\n        }\n        else if (value && typeof value !== 'string' && value[Symbol.iterator]) {\n            this._previousValue = this._setIterableValue(value);\n        }\n        else if (this.startNode.nextSibling === this.endNode.previousSibling &&\n            this.startNode.nextSibling.nodeType === Node.TEXT_NODE) {\n            this.startNode.nextSibling.textContent = value;\n            this._previousValue = value;\n        }\n        else {\n            this._previousValue = this._setTextValue(value);\n        }\n    }\n    _insertNodeBeforeEndNode(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNodeValue(value) {\n        this.clear();\n        this._insertNodeBeforeEndNode(value);\n        return value;\n    }\n    _setTextValue(value) {\n        return this._setNodeValue(new Text(value));\n    }\n    _setTemplateResultValue(value) {\n        let instance;\n        if (this._previousValue && this._previousValue._template === value.template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance = this.instance._createInstance(value.template);\n            this._setNodeValue(instance._clone());\n        }\n        instance.update(value.values);\n        return instance;\n    }\n    _setIterableValue(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and update Arrays of\n        // TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`)\n        // We reuse this parts startNode as the first part's startNode, and this\n        // parts endNode as the last part's endNode.\n        let itemStart = this.startNode;\n        let itemEnd;\n        const values = value[Symbol.iterator]();\n        const previousParts = Array.isArray(this._previousValue) ?\n            this._previousValue : undefined;\n        let previousPartsIndex = 0;\n        const itemParts = [];\n        let current = values.next();\n        let next = values.next();\n        if (current.done) {\n            // Empty iterable, just clear\n            this.clear();\n        }\n        while (!current.done) {\n            // Reuse a previous part if we can, otherwise create a new one\n            let itemPart;\n            if (previousParts !== undefined && previousPartsIndex < previousParts.length) {\n                itemPart = previousParts[previousPartsIndex++];\n                if (next.done && itemPart.endNode !== this.endNode) {\n                    // Since this is the last part we'll use, set it's endNode to the\n                    // container's endNode. Setting the value of this part will clean\n                    // up any residual nodes from a previously longer iterable.\n                    // Remove previousSibling, since we want itemPart.endNode to be\n                    // removed as part of the clear operation.\n                    this.clear(itemPart.endNode.previousSibling);\n                    itemPart.endNode = this.endNode;\n                }\n                itemEnd = itemPart.endNode;\n            }\n            else {\n                if (next.done) {\n                    // on the last item, reuse this part's endNode\n                    itemEnd = this.endNode;\n                }\n                else {\n                    itemEnd = new Text();\n                    this._insertNodeBeforeEndNode(itemEnd);\n                }\n                itemPart = new NodePart(this.instance, itemStart, itemEnd);\n            }\n            itemPart.setValue(current.value);\n            itemParts.push(itemPart);\n            current = next;\n            next = values.next();\n            itemStart = itemEnd;\n        }\n        return itemParts;\n    }\n    clear(startNode = this.startNode) {\n        this._previousValue = undefined;\n        let node = startNode.nextSibling;\n        while (node !== null && node !== this.endNode) {\n            let next = node.nextSibling;\n            node.parentNode.removeChild(node);\n            node = next;\n        }\n    }\n}\nexport class TemplateInstance {\n    constructor(template) {\n        this._parts = [];\n        this._template = template;\n    }\n    get template() {\n        return this._template;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (part.size === undefined) {\n                part.setValue(values[valueIndex++]);\n            }\n            else {\n                part.setValue(values.slice(valueIndex, valueIndex + part.size));\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        const fragment = document.importNode(this._template.element.content, true);\n        if (this._template.parts.length > 0) {\n            const walker = document.createTreeWalker(fragment, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT);\n            const parts = this._template.parts;\n            let index = 0;\n            let partIndex = 0;\n            let templatePart = parts[0];\n            let node = walker.nextNode();\n            while (node != null && partIndex < parts.length) {\n                if (index === templatePart.index) {\n                    this._parts.push(this._createPart(templatePart, node));\n                    templatePart = parts[++partIndex];\n                }\n                else {\n                    index++;\n                    node = walker.nextNode();\n                }\n            }\n        }\n        return fragment;\n    }\n    _createPart(templatePart, node) {\n        if (templatePart.type === 'attribute') {\n            return new AttributePart(this, node, templatePart.name, templatePart.strings);\n        }\n        else if (templatePart.type === 'node') {\n            return new NodePart(this, node, node.nextSibling);\n        }\n        else {\n            throw new Error(`unknown part type: ${templatePart.type}`);\n        }\n    }\n    _createInstance(template) {\n        return new TemplateInstance(template);\n    }\n}\n//# sourceMappingURL=lit-html.js.map","'use strict';\r\nimport fireEvent from './internals/fire-event.js';\r\nimport toJsProp from './internals/to-js-prop.js';\r\nimport loadScript from './internals/load-script.js';\r\nimport PubSubLoader from './internals/pub-sub-loader.js';\nimport { render } from './../node_modules/lit-html/lit-html.js'\r\n\r\nwindow.registeredElements = window.registeredElements || [];\r\n\r\nconst shouldShim = () => {\r\n  return /Edge/.test(navigator.userAgent) || /Firefox/.test(navigator.userAgent);\r\n}\n\nconst isValidRenderer = renderer => {\n  if (!renderer) {\n    return;\n  }\n  return String(renderer).includes('return html`')\n}\r\n\r\nconst handleProperties = (target, properties) => {\r\n  if (properties) {\r\n    for (let entry of Object.entries(properties)) {\r\n      handleProperty(target, entry[0], entry[1]);\n      // TODO: are we ignoring stuff ...?\n      // check if attribute has value else pass default property value\r\n      target[entry[0]] = target.hasAttribute(entry[0]) ? target.getAttribute(entry[0]) : entry[1].value;\r\n    }\r\n  }\r\n}\r\n\r\nconst handleProperty = (obj, property, {observer, strict, global, reflect, render, value }) => {\r\n\r\n  if (Boolean(observer || global) && _needsObserverSetup(obj, property)) {\n    // Ensure we don't do duplicate work\r\n    obj.observedProperties.push(property);\r\n\r\n    // subscribe only when a callback is defined, all other global options are still available ...\r\n    if (global && obj[observer]) {\n      // Warning, global observers don't work the same like bindings, each observer has it's namespace created like global.name,\n      // so whenever another element has an global observer for name, they will subscribe to the same publisher !\n      // TODO: Add local binding & improve global observers\n      // {{name}} for normal bindings & {{global::name}} for global bindings(observers) (like Polymer does)\n      // this means we need to build a system that keeps track of each component it's bindings &\n      // values should be set as property, so we know if a value needs to be set on attribute, rerender template, etc ..\r\n      PubSub.subscribe(`global.${property}`, obj[observer].bind(obj));\r\n    }\r\n    setupObserver(obj, property, observer, {strict, global, reflect, renderer: render})\r\n  } else if (!Boolean(observer || global) && Boolean(reflect || render)) {\n    setupObserver(obj, property, observer, {strict, global, reflect, renderer: render})\n  }\r\n}\r\n\r\nconst _needsObserverSetup = (obj, property) => {\r\n  if (!obj.observedProperties) {\r\n    obj.observedProperties = [];\r\n  }\r\n  if (obj.observedProperties[property]) {\r\n    console.warn(\r\n      'observer::ignoring duplicate property observer ' + property\r\n    );\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst forObservers = (target, observers, isGlobal=false) => {\r\n  for (let observe of observers) {\r\n    let parts = observe.split(/\\(|\\)/g);\r\n    let fn = parts[0];\r\n    parts = parts.slice(1);\r\n    for (let property of parts) {\r\n      if (property.length) {\r\n        handleProperty(target, property, fn, {\r\n          strict: false,\r\n          global: isGlobal\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Runs a method on target whenever given property changes\r\n *\r\n * example:\r\n * change(change) {\r\n *  change.property // name of the property\r\n *  change.value // value of the property\r\n * }\r\n *\r\n * @arg {object} obj target\r\n * @arg {string} property name\r\n * @arg {boolean} strict\r\n * @arg {method} fn The method to run on change\r\n */\r\nconst setupObserver = (obj, property, fn, {strict, global, reflect, renderer}) => {\r\n  Object.defineProperty(obj, property, {\r\n    set(value) {\n      if (value === undefined) {\n        return\n      }\r\n      if (this[`_${property}`] === value) {\r\n        return;\r\n      }\r\n      this[`_${property}`] = value;\r\n      let data = {\r\n        property: property,\r\n        value: value\r\n      };\n      if (reflect) {\n        if (value) this.setAttribute(property, String(value));\n        else this.removeAttribute(property);\n      }\n      if (renderer) {\n        if (typeof renderer === 'boolean') {\n          render(this.render(), this.shadowRoot);\n        } else {\n          // adds support for multiple renderers\n          render(this[renderer](), this.shadowRoot);\n        }\n      }\r\n      if (global) {\r\n        data.instance = this;\r\n        PubSub.publish(`global.${property}`, data);\r\n      } else if(fn) {\r\n        if (this[fn]) {\r\n          this[fn](data);\r\n        } else {\r\n          console.warn(`observer undefined::${fn} is not a function`);\r\n        }\r\n      }\r\n    },\r\n    get() {\r\n      return this[`_${property}`];\r\n    },\r\n    configurable: strict ? false : true\r\n  });\r\n}\r\n\r\n\r\nconst handleObservers = (target, observers=[], globalObservers=[]) => {\r\n  if (!observers && !globalObservers) {\r\n    return;\r\n  }\r\n  forObservers(target, observers);\r\n}\r\n\r\nconst handleListeners = target => {\r\n  const attributes = target.attributes\r\n  for (const attribute of attributes) {\r\n    if (String(attribute.name).includes('on-')) {\r\n      const fn = attribute.value;\r\n      const name = attribute.name.replace('on-', '');\r\n      target.addEventListener(String(name), event => {\r\n        target = event.path[0];\r\n        while (!target.host) {\r\n          target = target.parentNode;\r\n        }\r\n        if (target.host[fn]) {\r\n          target.host[fn](event);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst ready = target => {\r\n  requestAnimationFrame(() => {\r\n    if (target.ready) target.ready();\r\n  });\r\n}\r\n\r\nconst constructorCallback = (target=HTMLElement, klass=Function, hasWindow=false) => {\r\n  PubSubLoader(hasWindow);\r\n\r\n  target.fireEvent = target.fireEvent || fireEvent.bind(target);\r\n  target.toJsProp = target.toJsProp || toJsProp.bind(target);\r\n  target.loadScript = target.loadScript || loadScript.bind(target);\r\n\n\n  // setup properties\n  handleProperties(target, klass.properties);\n  handleObservers(target, klass.observers, klass.globalObservers);\n\r\n  if (!target.registered && target.created) target.created();\r\n\r\n  // let backed know the element is registered\r\n  target.registered = true;\r\n}\r\n\r\nconst connectedCallback = (target=HTMLElement, klass=Function) => {\r\n  if (target.connected) target.connected();\r\n  // setup listeners\r\n  handleListeners(target)\r\n  // notify everything is ready\r\n  ready(target);\r\n}\r\n\r\nconst shouldRegister = (name, klass) => {\r\n  if (window.registeredElements.indexOf(name) === -1) {\r\n    window.registeredElements.push(name);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default {\r\n  ready: ready,\r\n  connectedCallback: connectedCallback,\r\n  constructorCallback: constructorCallback,\r\n  shouldRegister: shouldRegister\r\n}\r\n","'use strict';\r\nlet sheduled = false;\r\nconst afterRenderQue = [];\r\nconst beforeRenderQue = [];\r\n\r\nconst callMethod = array => {\r\n  const context = array[0];\r\n  const callback = array[1];\r\n  const args = array[2];\r\n  try {\r\n    callback.apply(context, args);\r\n  } catch(e) {\r\n    setTimeout(() => {\r\n      throw e;\r\n    })\r\n  }\r\n};\r\n\r\nconst flushQue = que => {\r\n  while (que.length) {\r\n    callMethod(que.shift);\r\n  }\r\n};\r\n\r\nconst runQue = que => {\r\n  for (let i=0, l=que.length; i < l; i++) {\r\n    callMethod(que.shift());\r\n  }\n  sheduled = false;\r\n}\r\n\r\nconst shedule = () => {\r\n  sheduled = true;\r\n  requestAnimationFrame(() => {\r\n    flushQue(beforeRenderQue);\r\n    setTimeout(() => {\r\n      runQue(afterRenderQue);\r\n    });\r\n  });\r\n};\r\n\r\nexport default {\r\n  afterRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    afterRenderQue.push([context, callback, args]);\r\n  },\r\n  beforeRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    beforeRenderQue.push([context, callback, args]);\r\n  }\r\n\r\n}\r\n","'use strict';\r\nimport base from './base.js';\r\nimport renderStatus from './internals/render-status.js';\nimport { html } from './../node_modules/lit-html/lit-html.js';\n\r\nconst ____isWindow____ = () => {\r\n  try {\r\n    return window;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst ____hasWindow____ = ____isWindow____();\nif (____hasWindow____) {\n  window['RenderStatus'] = window['RenderStatus'] || renderStatus;\n  window.html = window.html || html;\n} else {\n  exports['RenderStatus'] = exports['RenderStatus'] || renderStatus;\n  exports.html = exports.html || html;\n}\r\n/**\r\n *\r\n * @module backed\r\n * @param {class} _class\r\n */\r\nexport default _class => {\r\n  const upperToHyphen = string => {\r\n    return string.replace(/([A-Z])/g, \"-$1\").toLowerCase().replace('-', '');\r\n  };\r\n\r\n  let klass;\r\n\r\n  // get the tagName or try to make one with class.name\r\n  let name = _class.is || upperToHyphen(_class.name);\n  let hasRenderer = false;\n  // Setup properties & observers\r\n  if (____hasWindow____) {\n    const observedAttributes = [];\n    for (const property of Object.entries(_class.properties)) {\n      const {reflect, render} = property[1]\n      if (reflect) {\n        observedAttributes.push(property[0]);\n      }\n      if (render) {\n        hasRenderer = true\n      }\n    }\n    klass = class extends _class {\n      static get observedAttributes() {\n        return observedAttributes;\n      }\n      constructor() {\n        super();\n        if (hasRenderer && !this.shadowRoot) {\n          this.attachShadow({mode: 'open'});\n        }\n        base.constructorCallback(this, _class, ____hasWindow____);\n      }\n      connectedCallback() {\n        base.connectedCallback(this, _class);\n      }\n      disconnectedCallback() {\n        if (this.disconnected) this.disconnected();\n      }\n      attributeChangedCallback(name, oldValue, newValue) {\n        this[name] = newValue;\n      }\n    }\n    if (base.shouldRegister(name, klass)) {\n      customElements.define(name, klass);\n    };\n    return window[_class.name] = klass;\n  } else {\n    // TODO: add commonjs support\n    // return exports[_class.name]\n  }\r\n};\r\n\r\nwindow.dispatchEvent(new CustomEvent('backed-ready'));\r\n"],"names":["type","String","detail","target","document","dispatchEvent","CustomEvent","string","parts","split","length","upper","charAt","toUpperCase","slice","toLowerCase","loadScript","src","Promise","resolve","reject","script","createElement","onload","result","onerror","error","body","appendChild","handlers","event","handler","context","push","bind","change","i","oldValue","value","isWindow","PubSub","window","Pubsub","global","templates","Map","html","strings","values","template","get","undefined","Template","set","TemplateResult","render","container","instance","__templateInstance","TemplateInstance","update","fragment","_clone","firstChild","removeChild","exprMarker","TemplatePart","index","name","rawName","_strings","_parse","element","innerHTML","_getTemplateHtml","walker","createTreeWalker","content","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","partIndex","nodesToRemove","attributesToRemove","nextNode","node","currentNode","nodeType","Node","ELEMENT_NODE","attributes","attribute","item","attributeString","rawNameString","substring","match","TEXT_NODE","nodeValue","literalNode","Text","parentNode","insertBefore","trim","n","a","ownerElement","removeAttribute","join","Part","e","AttributePart","assert","text","v","_getValue","Symbol","iterator","t","setAttribute","size","NodePart","startNode","endNode","_previousValue","_setNodeValue","_setTemplateResultValue","then","setValue","_setIterableValue","nextSibling","previousSibling","textContent","_setTextValue","clear","_insertNodeBeforeEndNode","_template","_createInstance","itemStart","itemEnd","previousParts","Array","isArray","previousPartsIndex","itemParts","current","next","done","itemPart","_parts","valueIndex","part","importNode","templatePart","_createPart","Error","registeredElements","handleProperties","properties","entry","Object","entries","hasAttribute","getAttribute","handleProperty","obj","property","observer","strict","reflect","Boolean","_needsObserverSetup","observedProperties","subscribe","renderer","warn","forObservers","observers","isGlobal","observe","fn","setupObserver","defineProperty","data","shadowRoot","publish","handleObservers","globalObservers","handleListeners","includes","replace","addEventListener","path","host","ready","constructorCallback","HTMLElement","klass","Function","hasWindow","fireEvent","toJsProp","registered","created","connectedCallback","connected","shouldRegister","indexOf","sheduled","afterRenderQue","beforeRenderQue","callMethod","array","callback","args","apply","flushQue","que","shift","runQue","l","shedule","____isWindow____","____hasWindow____","renderStatus","exports","_class","upperToHyphen","is","hasRenderer","observedAttributes","attachShadow","mode","disconnected","newValue","base","define"],"mappings":"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"}