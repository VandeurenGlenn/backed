[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/backed-element.js",
    "content": "import LitMixin from './mixins/lit-mixin.js';\nimport PropertyMixin from './mixins/property-mixin.js';\nimport {define} from './utils.js';\n\nwindow.define = window.define || define;\n\nexport default (base=HTMLElement) => {\n  return class BackedElement extends PropertyMixin(LitMixin(base)) {\n    static get properties() {\n      return {\n        template: {\n          renderer: 'render'\n        }\n      }\n    }\n    constructor() {\n      super({});\n    }\n    render() {\n      return customElements.get(this.localName).template;\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/backed-element.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "backedelement",
    "memberof": "src/backed-element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/backed-element.js~backedelement",
    "access": null,
    "export": true,
    "importPath": "backed/src/backed-element.js",
    "importStyle": "backedelement",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "src/backed.js",
    "content": "'use strict';\r\nimport base from './base.js';\r\n// import renderStatus from './internals/render-status.js';\r\nimport { html } from './../node_modules/lit-html/lit-html.js';\r\nimport {shouldRegister, hyphenate} from './utils.js';\r\n\r\nconst ____isWindow____ = () => {\r\n  try {\r\n    return window;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst ____hasWindow____ = ____isWindow____();\r\nif (____hasWindow____) {\r\n  // window['RenderStatus'] = window['RenderStatus'] || renderStatus;\r\n  window.html = window.html || html;\r\n} else {\r\n  // exports['RenderStatus'] = exports['RenderStatus'] || renderStatus;\r\n  exports.html = exports.html || html;\r\n}\r\n/**\r\n *\r\n * @module backed\r\n * @param {class} _class\r\n */\r\nexport default _class => {\r\n  let klass;\r\n  // get the tagName or try to make one with class.name\r\n  let name = _class.is || hyphenate(_class.name);\r\n  let hasRenderer = false;\r\n  // Setup properties & observers\r\n  const observedAttributes = [];\r\n  klass = class extends _class {\r\n    static get observedAttributes() {\r\n      return Object.entries(_class.properties).map(entry => {if (entry[1].reflect) {return entry[0]} else return null});\r\n    }\r\n    constructor() {\r\n      super();\r\n      base.constructorCallback(this, _class);\r\n    }\r\n    connectedCallback() {\r\n      base.connectedCallback(this, _class);\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n      this[name] = newValue;\r\n    }\r\n  }\r\n  if (shouldRegister(name, klass)) {\r\n    customElements.define(name, klass);\r\n  };\r\n};\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/backed.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "function",
    "name": "____isWindow____",
    "memberof": "src/backed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/backed.js~____isWindow____",
    "access": null,
    "export": false,
    "importPath": "backed/src/backed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "____hasWindow____",
    "memberof": "src/backed.js",
    "static": true,
    "longname": "src/backed.js~____hasWindow____",
    "access": null,
    "export": false,
    "importPath": "backed/src/backed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 5,
    "kind": "function",
    "name": "backed",
    "memberof": "src/backed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/backed.js~backed",
    "access": null,
    "export": true,
    "importPath": "backed/src/backed.js",
    "importStyle": "backed",
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "backed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "_class",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "file",
    "name": "src/base.js",
    "content": "'use strict';\r\n\r\nimport { loadScript, fireEvent, toJsProp, RenderStatus } from './utils.js';\r\nimport PubSub from './internals/pub-sub.js';\r\nimport { render } from './../node_modules/lit-html/lit-html.js'\r\n\r\nwindow.registeredElements = window.registeredElements || [];\r\n\r\nconst shouldShim = () => {\r\n  return /Edge/.test(navigator.userAgent) || /Firefox/.test(navigator.userAgent);\r\n}\r\n\r\nconst isValidRenderer = renderer => {\r\n  if (!renderer) {\r\n    return;\r\n  }\r\n  return String(renderer).includes('return html`')\r\n}\r\n\r\nconst handleProperties = (target, properties) => {\r\n  if (properties) {\r\n    for (let entry of Object.entries(properties)) {\r\n      handleProperty(target, entry[0], entry[1]);\r\n      // TODO: are we ignoring stuff ...?\r\n      // check if attribute has value else pass default property value\r\n      target[entry[0]] = target.hasAttribute(entry[0]) ? target.getAttribute(entry[0]) : entry[1].value;\r\n    }\r\n  }\r\n}\r\n\r\nconst handleProperty = (obj, property, {observer, strict, global, reflect, render, value }) => {\r\n\r\n  if (Boolean(observer || global) && _needsObserverSetup(obj, property)) {\r\n    // Ensure we don't do duplicate work\r\n    obj.observedProperties.push(property);\r\n\r\n    // subscribe only when a callback is defined, all other global options are still available ...\r\n    if (global && obj[observer]) {\r\n      // Warning, global observers don't work the same like bindings, each observer has it's namespace created like global.name,\r\n      // so whenever another element has an global observer for name, they will subscribe to the same publisher !\r\n      // TODO: Add local binding & improve global observers\r\n      // {{name}} for normal bindings & {{global::name}} for global bindings(observers) (like Polymer does)\r\n      // this means we need to build a system that keeps track of each component it's bindings &\r\n      // values should be set as property, so we know if a value needs to be set on attribute, rerender template, etc ..\r\n      PubSub.subscribe(`global.${property}`, obj[observer].bind(obj));\r\n    }\r\n    setupObserver(obj, property, observer, {strict, global, reflect, renderer: render})\r\n  } else if (!Boolean(observer || global) && Boolean(reflect || render)) {\r\n    setupObserver(obj, property, observer, {strict, global, reflect, renderer: render})\r\n  }\r\n}\r\n\r\nconst _needsObserverSetup = (obj, property) => {\r\n  if (!obj.observedProperties) {\r\n    obj.observedProperties = [];\r\n  }\r\n  if (obj.observedProperties[property]) {\r\n    console.warn(\r\n      'observer::ignoring duplicate property observer ' + property\r\n    );\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst forObservers = (target, observers, isGlobal=false) => {\r\n  for (let observe of observers) {\r\n    let parts = observe.split(/\\(|\\)/g);\r\n    let fn = parts[0];\r\n    parts = parts.slice(1);\r\n    for (let property of parts) {\r\n      if (property.length) {\r\n        handleProperty(target, property, fn, {\r\n          strict: false,\r\n          global: isGlobal\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Runs a method on target whenever given property changes\r\n *\r\n * example:\r\n * change(change) {\r\n *  change.property // name of the property\r\n *  change.value // value of the property\r\n * }\r\n *\r\n * @arg {object} obj target\r\n * @arg {string} property name\r\n * @arg {boolean} strict\r\n * @arg {method} fn The method to run on change\r\n */\r\nconst setupObserver = (obj, property, fn, {strict, global, reflect, renderer}) => {\r\n  if (renderer && !obj.shadowRoot) {\r\n    obj.attachShadow({mode: 'open'})\r\n  }\r\n  Object.defineProperty(obj, property, {\r\n    set(value) {\r\n      if (value === undefined) {\r\n        return\r\n      }\r\n      if (this[`_${property}`] === value) {\r\n        return;\r\n      }\r\n      this[`_${property}`] = value;\r\n      let data = {\r\n        property: property,\r\n        value: value\r\n      };\r\n      if (reflect) {\r\n        if (value) this.setAttribute(property, String(value));\r\n        else this.removeAttribute(property);\r\n      }\r\n      if (renderer) {\r\n        if (typeof renderer === 'boolean') {\r\n          render(this.render(), this.shadowRoot);\r\n        } else {\r\n          // adds support for multiple renderers\r\n          render(this[renderer](), this.shadowRoot);\r\n        }\r\n      }\r\n      if (global) {\r\n        data.instance = this;\r\n        PubSub.publish(`global.${property}`, data);\r\n      } else if(fn) {\r\n        if (this[fn]) {\r\n          this[fn](data);\r\n        } else {\r\n          console.warn(`observer undefined::${fn} is not a function`);\r\n        }\r\n      }\r\n    },\r\n    get() {\r\n      return this[`_${property}`];\r\n    },\r\n    configurable: strict ? false : true\r\n  });\r\n}\r\n\r\n\r\nconst handleObservers = (target, observers=[], globalObservers=[]) => {\r\n  if (!observers && !globalObservers) {\r\n    return;\r\n  }\r\n  forObservers(target, observers);\r\n}\r\n\r\nconst handleListeners = target => {\r\n  const attributes = target.attributes;\r\n  for (const attribute of attributes) {\r\n    if (String(attribute.name).includes('on-')) {\r\n      const fn = attribute.value;\r\n      const name = attribute.name.replace('on-', '');\r\n      target.addEventListener(String(name), event => {\r\n        target = event.path[0];\r\n        while (!target.host) {\r\n          target = target.parentNode;\r\n        }\r\n        if (target.host[fn]) {\r\n          target.host[fn](event);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst ready = target => {\r\n  requestAnimationFrame(() => {\r\n    if (target.ready) target.ready();\r\n  });\r\n}\r\n\r\nconst constructorCallback = (target=HTMLElement, klass=Function, hasWindow=false) => {\r\n\r\n  target.fireEvent = target.fireEvent || fireEvent.bind(target);\r\n  target.toJsProp = target.toJsProp || toJsProp.bind(target);\r\n  target.loadScript = target.loadScript || loadScript.bind(target);\r\n\r\n\r\n  // setup properties\r\n\r\n  if (!target.registered && target.created) target.created();\r\n\r\n  // let backed know the element is registered\r\n  target.registered = true;\r\n}\r\n\r\nconst connectedCallback = (target=HTMLElement, klass=Function) => {\r\n  if (target.connected) target.connected();\r\n  handleProperties(target, klass.properties);\r\n  handleObservers(target, klass.observers, klass.globalObservers);\r\n  // setup listeners\r\n  handleListeners(target)\r\n  // notify everything is ready\r\n  ready(target);\r\n}\r\n\r\nconst shouldRegister = (name, klass) => {\r\n  if (window.registeredElements.indexOf(name) === -1) {\r\n    window.registeredElements.push(name);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default {\r\n  ready: ready,\r\n  connectedCallback: connectedCallback,\r\n  constructorCallback: constructorCallback,\r\n  shouldRegister: shouldRegister\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/base.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 7,
    "kind": "function",
    "name": "shouldShim",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~shouldShim",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "isValidRenderer",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~isValidRenderer",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 9,
    "kind": "function",
    "name": "handleProperties",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~handleProperties",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "handleProperty",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~handleProperty",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "_needsObserverSetup",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~_needsObserverSetup",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "forObservers",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~forObservers",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "setupObserver",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~setupObserver",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": "Runs a method on target whenever given property changes\n\nexample:\nchange(change) {\n change.property // name of the property\n change.value // value of the property\n}",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@arg",
        "tagValue": "{object} obj target"
      },
      {
        "tagName": "@arg",
        "tagValue": "{string} property name"
      },
      {
        "tagName": "@arg",
        "tagValue": "{boolean} strict"
      },
      {
        "tagName": "@arg",
        "tagValue": "{method} fn The method to run on change"
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "function",
    "name": "handleObservers",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~handleObservers",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 15,
    "kind": "function",
    "name": "handleListeners",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~handleListeners",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "ready",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~ready",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true
  },
  {
    "__docId__": 17,
    "kind": "function",
    "name": "constructorCallback",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~constructorCallback",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "connectedCallback",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~connectedCallback",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 19,
    "kind": "function",
    "name": "shouldRegister",
    "memberof": "src/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/base.js~shouldRegister",
    "access": null,
    "export": false,
    "importPath": "backed/src/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 202,
    "undocument": true
  },
  {
    "__docId__": 20,
    "kind": "file",
    "name": "src/internals/pub-sub.js",
    "content": "'use strict';\nclass PubSub {\r\n\r\n  /**\r\n   * Creates handlers\r\n   */\r\n  constructor() {\r\n    this.handlers = [];\r\n  }\r\n\r\n  /**\r\n   * @param {String} event\r\n   * @param {Method} handler\r\n   * @param {HTMLElement} context\r\n   */\r\n  subscribe(event, handler, context) {\r\n    if (typeof context === 'undefined') {\r\n      context = handler;\r\n    }\r\n    this.handlers.push({event: event, handler: handler.bind(context)});\r\n  }\r\n\r\n  /**\r\n   * @param {String} event\r\n   * @param {String|Number|Boolean|Object|Array} change\n   */\r\n  publish(event, change) {\n    for (let i = 0; i < this.handlers.length; i++) {\r\n      if (this.handlers[i].event === event) {\n        let oldValue = this.handlers[i].oldValue;\n        // dirty checking value, ensures that we don't create a loop\n        if (oldValue !== change.value) {\n          this.handlers[i].handler(change, this.handlers[i].oldValue);\n          this.handlers[i].oldValue = change.value;\n        }\n      }\r\n    }\r\n  }\r\n}\r\n\nexport default window.PubSub ? window.PubSub : window.PubSub = new PubSub();\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/internals/pub-sub.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 21,
    "kind": "class",
    "name": "PubSub",
    "memberof": "src/internals/pub-sub.js",
    "static": true,
    "longname": "src/internals/pub-sub.js~PubSub",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/pub-sub.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 22,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/internals/pub-sub.js~PubSub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/internals/pub-sub.js~PubSub#constructor",
    "access": null,
    "description": "Creates handlers",
    "lineNumber": 7
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "handlers",
    "memberof": "src/internals/pub-sub.js~PubSub",
    "static": false,
    "longname": "src/internals/pub-sub.js~PubSub#handlers",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/internals/pub-sub.js~PubSub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/internals/pub-sub.js~PubSub#subscribe",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Method"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "publish",
    "memberof": "src/internals/pub-sub.js~PubSub",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/internals/pub-sub.js~PubSub#publish",
    "access": null,
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number",
          "Boolean",
          "Object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "file",
    "name": "src/internals/render-status.js",
    "content": "'use strict';\r\nlet sheduled = false;\r\nconst afterRenderQue = [];\r\nconst beforeRenderQue = [];\r\n\r\nconst callMethod = array => {\r\n  const context = array[0];\r\n  const callback = array[1];\r\n  const args = array[2];\r\n  try {\r\n    callback.apply(context, args);\r\n  } catch(e) {\r\n    setTimeout(() => {\r\n      throw e;\r\n    })\r\n  }\r\n};\r\n\r\nconst flushQue = que => {\r\n  while (que.length) {\r\n    callMethod(que.shift);\r\n  }\r\n};\r\n\r\nconst runQue = que => {\r\n  for (let i=0, l=que.length; i < l; i++) {\r\n    callMethod(que.shift());\r\n  }\r\n  sheduled = false;\r\n}\r\n\r\nconst shedule = () => {\r\n  sheduled = true;\r\n  requestAnimationFrame(() => {\r\n    flushQue(beforeRenderQue);\r\n    setTimeout(() => {\r\n      runQue(afterRenderQue);\r\n    });\r\n  });\r\n};\r\n\r\nexport default {\r\n  afterRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    afterRenderQue.push([context, callback, args]);\r\n  },\r\n  beforeRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    beforeRenderQue.push([context, callback, args]);\r\n  }\r\n\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/internals/render-status.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "sheduled",
    "memberof": "src/internals/render-status.js",
    "static": true,
    "longname": "src/internals/render-status.js~sheduled",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "name": "afterRenderQue",
    "memberof": "src/internals/render-status.js",
    "static": true,
    "longname": "src/internals/render-status.js~afterRenderQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "beforeRenderQue",
    "memberof": "src/internals/render-status.js",
    "static": true,
    "longname": "src/internals/render-status.js~beforeRenderQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "callMethod",
    "memberof": "src/internals/render-status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/internals/render-status.js~callMethod",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 31,
    "kind": "function",
    "name": "flushQue",
    "memberof": "src/internals/render-status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/internals/render-status.js~flushQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "runQue",
    "memberof": "src/internals/render-status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/internals/render-status.js~runQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "shedule",
    "memberof": "src/internals/render-status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/internals/render-status.js~shedule",
    "access": null,
    "export": false,
    "importPath": "backed/src/internals/render-status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 34,
    "kind": "file",
    "name": "src/mixins/css-mixin.js",
    "content": "/**\r\n * @module LitMixin\r\n * @mixin Backed\r\n * @param {class} base class to extend from\r\n */\r\n const mixins = {\r\n  'mixin(--css-row)': `display: flex;\r\n        flex-direction: row;\r\n  `,\r\n  'mixin(--css-column)': `display: flex;\r\n        flex-direction: column;\r\n  `,\r\n  'mixin(--css-center)': `align-items: center;`,\r\n  'mixin(--css-header)': `height: 128px;\r\n        width: 100%;\r\n        background: var(--primary-color);\r\n        color: var(--text-color);\r\n        mixin(--css-column)`,\r\n  'mixin(--css-flex)': `flex: 1;`,\n  'mixin(--css-flex-2)': `flex: 2;`,\n  'mixin(--css-flex-3)': `flex: 3;`,\n  'mixin(--css-flex-4)': `flex: 4;`,\r\n  'mixin(--material-palette)': `--dark-primary-color: #00796B;\r\n        --light-primary-color: #B2DFDB;\r\n        --primary-color: #009688;\r\n        --text-color: #FFF;\r\n        --primary-text-color: #212121;\r\n        --secondary-text-color: #757575;\r\n        --divider-color: #BDBDBD;\r\n        --accent-color: #4CAF50;\r\n        --disabled-text-color: #BDBDBD;\r\n        --primary-background-color: #f9ffff;\r\n        --dialog-background-color: #FFFFFF;`,\r\n  'mixin(--css-hero)': `display: flex;\n        max-width: 600px;\n        max-height: 340px;\n        height: 100%;\n        width: 100%;\n        box-shadow: 3px 2px 4px 2px rgba(0,0,0, 0.15),\n                    -2px 0px 4px 2px rgba(0,0,0, 0.15);\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        border-radius: 2px;\r\n  `\r\n };\r\n\r\n const classes = {\r\n   'apply(--css-row)': `.row {\r\n        mixin(--css-row)\r\n      }\r\n   `,\r\n   'apply(--css-column)': `.column {\r\n        mixin(--css-column)\r\n      }\r\n   `,\r\n   'apply(--css-flex)': `.flex {\r\n        mixin(--css-flex)\r\n      }\r\n   `,\r\n   'apply(--css-center)': `.center {\r\n        align-items: center;\r\n      }\r\n   `,\r\n   'apply(--css-center-center)': `.center-center {\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n   `,\r\n   'apply(--css-header)': `header, .header {\r\n     mixin(--css-header)\r\n   }`,\r\n   'apply(--css-hero)': `.hero {\r\n      mixin(--css-hero)\r\n   }`\r\n }\r\nexport default base => {\r\n  return class CSSMixin extends base {\r\n\r\n    get style() {\r\n      return this.shadowRoot.querySelector('style');\r\n    }\r\n    constructor() {\r\n      super();\r\n      // this._transformClass = this._transformClass.bind(this)\r\n    }\r\n    connectedCallback() {\r\n      // TODO: test\r\n      console.warn('test!!');\r\n      if (super.connectedCallback) super.connectedCallback();\r\n      // TODO: Implement better way to check if LitMixin is used\r\n      if (this.render) this.hasLitMixin = true;\r\n      else if(this.template) console.log('element');\r\n\r\n      this._init()\r\n    }\r\n    _init() {\r\n      if (this.hasLitMixin) {\r\n        if (!this.rendered) {\r\n          return requestAnimationFrame(() => {\r\n              this._init()\r\n            });\r\n        }\r\n      }\r\n      const style = this.shadowRoot.querySelector('style');\r\n      // const matches = style.innerHTML.match(/apply((.*))/g);\r\n      this._applyClasses(style.innerHTML).then(innerHTML => {\r\n        if (innerHTML) this.style.innerHTML = innerHTML;\r\n        this._applyMixins(style.innerHTML).then(innerHTML => {\r\n          if (innerHTML) this.style.innerHTML = innerHTML;\r\n        })\r\n      }).catch(error => {\r\n        console.error(error);\r\n      });\r\n      // this._applyVariables(matches, style);\r\n    }\r\n\r\n    _applyMixins(string) {\r\n      const mixinInMixin = string => {\r\n        const matches = string.match(/mixin((.*))/g);\r\n        if (matches) {\r\n          for (const match of matches) {\r\n            const mixin = mixins[match];\r\n            string = string.replace(match, mixin)\r\n          }\r\n        }\r\n        return string;\r\n      }\r\n      return new Promise((resolve, reject) => {\r\n        const matches = string.match(/mixin((.*))/g);\r\n        if (matches) for (const match of matches) {\r\n          const mixin = mixinInMixin(mixins[match]);\r\n          console.log(mixin);\r\n          string = string.replace(match, mixin);\r\n          // return [\r\n          //   match, mixins[match]\r\n          // ]\r\n\r\n        };\r\n        resolve(string);\r\n      });\r\n    }\r\n\r\n    _applyClasses(string) {\r\n      return new Promise((resolve, reject) => {\r\n        const matches = string.match(/apply((.*))/g);\r\n        if (matches) for (const match of matches) {\r\n          // this._applyMixins(classes[match]).then(klass => {\r\n            string = string.replace(match, classes[match]);\r\n          // });\r\n        }\r\n        // this.style.innerHTML = string;\r\n        resolve(string);\r\n      });\r\n    }\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/mixins/css-mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "name": "mixins",
    "memberof": "src/mixins/css-mixin.js",
    "static": true,
    "longname": "src/mixins/css-mixin.js~mixins",
    "access": null,
    "export": false,
    "importPath": "backed/src/mixins/css-mixin.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "LitMixin"
      },
      {
        "tagName": "@mixin",
        "tagValue": "Backed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": "class to extend from"
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "name": "classes",
    "memberof": "src/mixins/css-mixin.js",
    "static": true,
    "longname": "src/mixins/css-mixin.js~classes",
    "access": null,
    "export": false,
    "importPath": "backed/src/mixins/css-mixin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "cssmixin",
    "memberof": "src/mixins/css-mixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mixins/css-mixin.js~cssmixin",
    "access": null,
    "export": true,
    "importPath": "backed/src/mixins/css-mixin.js",
    "importStyle": "cssmixin",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 38,
    "kind": "file",
    "name": "src/mixins/lit-mixin.js",
    "content": "import { html, render } from './../../node_modules/lit-html/lit-html.js';\r\nwindow.html = window.html || html;\r\nwindow.Backed = window.Backed || {};\r\nwindow.Backed.Renderer = window.Backed.Renderer || render;\r\n\r\n/**\r\n * @module LitMixin\r\n * @mixin Backed\r\n * @param {class} base class to extend from\r\n */\r\nexport default base => {\r\n  return class LitMixin extends base {\r\n    constructor(options = {}) {\r\n      super(options);\r\n      if (!this.shadowRoot) this.attachShadow({mode: 'open'});\r\n      this._isValidRenderer(this.render);\r\n    }\r\n    connectedCallback() {\r\n      if (super.connectedCallback) super.connectedCallback();\r\n      if (this.render) {\r\n        render(this.render(), this.shadowRoot);\r\n        this.rendered = true;\r\n      };\r\n    }\r\n    _isValidRenderer(renderer) {\r\n      if (!renderer) {\r\n       throw 'Missing render method!';\r\n       return;\r\n      }\r\n      if (!String(renderer).includes('return html`') &&\r\n         !String(renderer).includes('template')) {\r\n         throw 'Invalid renderer!';\r\n      }\r\n    }\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/mixins/lit-mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "litmixin",
    "memberof": "src/mixins/lit-mixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mixins/lit-mixin.js~litmixin",
    "access": null,
    "export": true,
    "importPath": "backed/src/mixins/lit-mixin.js",
    "importStyle": "litmixin",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "LitMixin"
      },
      {
        "tagName": "@mixin",
        "tagValue": "Backed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": "class to extend from"
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "file",
    "name": "src/mixins/property-mixin.js",
    "content": "window.Backed = window.Backed || {};\r\n// binding does it's magic using the propertyStore ...\r\nwindow.Backed.PropertyStore = window.Backed.PropertyStore || new Map();\r\n\r\nconst render = window.Backed.Renderer;\r\n// TODO: Create & add global observer\r\nexport default base => {\r\n  return class PropertyMixin extends base {\n    static get observedAttributes() {\n      return Object.entries(this.properties).map(entry => {if (entry[1].reflect) {return entry[0]} else return null});\n    }\n\n    get properties() {\n      return customElements.get(this.localName).properties;\n    }\n\r\n    constructor() {\r\n      super();\n      if (this.properties) {\n        for (const entry of Object.entries(this.properties)) {\n          const { observer, reflect, renderer } = entry[1];\n          if (observer || reflect || renderer) {\n            if (renderer && !render) {\n              console.warn('Renderer undefined');\n            }\n          }\n          // allways define property even when renderer is not found.\n          this.defineProperty(entry[0], entry[1]);\n        }\n      }\r\n    }\n\n    connectedCallback() {\n      if (super.connectedCallback) super.connectedCallback();\n      if (this.attributes)\n        for (const attribute of this.attributes) {\n          if (String(attribute.name).includes('on-')) {\n            const fn = attribute.value;\n            const name = attribute.name.replace('on-', '');\n            this.addEventListener(String(name), event => {\n              let target = event.path[0];\n              while (!target.host) {\n                target = target.parentNode;\n              }\n              if (target.host[fn]) {\n                target.host[fn](event);\n              }\n            });\n          }\n      }\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      this[name] = newValue;\n    }\r\n\r\n    /**\r\n     * @param {function} options.observer callback function returns {instance, property, value}\r\n     * @param {boolean} options.reflect when true, reflects value to attribute\r\n     * @param {function} options.render callback function for renderer (example: usage with lit-html, {render: render(html, shadowRoot)})\r\n     */\r\n    defineProperty(property = null, {strict = false, observer, reflect = false, renderer, value}) {\r\n      Object.defineProperty(this, property, {\r\n        set(value) {\r\n          if (value === this[`___${property}`]) return;\r\n          this[`___${property}`] = value;\r\n\r\n          if (reflect) {\r\n            if (value) this.setAttribute(property, String(value));\r\n            else this.removeAttribute(property);\r\n          }\r\n\r\n          if (observer) {\r\n            if (observer in this) this[observer]();\r\n            else console.warn(`observer::${observer} undefined`);\r\n          }\r\n\r\n          if (renderer) {\r\n            if (renderer in this) render(this[renderer](), this.shadowRoot);\r\n            else console.warn(`renderer::${renderer} undefined`);\r\n          }\r\n\r\n        },\r\n        get() {\r\n          return this[`___${property}`];\r\n        },\r\n        configurable: strict ? false : true\r\n      });\r\n      // check if attribute is defined and update property with it's value\r\n      // else fallback to it's default value (if any)\r\n      const attr = this.getAttribute(property);\r\n      this[property] = attr || this.hasAttribute(property) || value;\r\n    }\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/mixins/property-mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "name": "render",
    "memberof": "src/mixins/property-mixin.js",
    "static": true,
    "longname": "src/mixins/property-mixin.js~render",
    "access": null,
    "export": false,
    "importPath": "backed/src/mixins/property-mixin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "propertymixin",
    "memberof": "src/mixins/property-mixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mixins/property-mixin.js~propertymixin",
    "access": null,
    "export": true,
    "importPath": "backed/src/mixins/property-mixin.js",
    "importStyle": "propertymixin",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 43,
    "kind": "file",
    "name": "src/poly-loader.js",
    "content": "'use strict';\r\nimport { loadScript } from './utils.js';\r\n\r\nconst bowerMinUrl = (name, main, root) => {\r\n  const url = main ? `${name}/${main}` : `${name}/${name}`;\r\n  return `${root}/${url}.min.js`;\r\n}\r\n\r\nconst ensureArray = array => {\r\n  if (Array.isArray(array)) {\r\n    return array;\r\n  }\r\n  return [...array];\r\n}\r\n\r\n/**\r\n * @module polyLoader\r\n * @param {string} name package name (folder)\r\n * @param {string} main script to use\r\n * @param {string} root location of your components\r\n */\r\nexport default (fills, root='bower_components') => {\r\n  return new Promise((resolve, reject) => {\r\n    fills = ensureArray(fills);\r\n    fills = fills.map(fill => {\r\n      let name;\r\n      let main = null;\r\n      if (typeof(fill) === 'object') {\r\n        name = fill.name;\r\n        main = fill.main;\r\n      } else {\r\n        name = fill;\r\n      }\r\n      if (name === 'shadycss' && !main) {\r\n        main = 'custom-style-interface';\r\n      }\r\n      return loadScript(bowerMinUrl(name, main, root));\r\n    });\r\n    Promise.all(fills).then(() => resolve()).catch(error => reject(error));\r\n  });\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/poly-loader.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "bowerMinUrl",
    "memberof": "src/poly-loader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/poly-loader.js~bowerMinUrl",
    "access": null,
    "export": false,
    "importPath": "backed/src/poly-loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "ensureArray",
    "memberof": "src/poly-loader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/poly-loader.js~ensureArray",
    "access": null,
    "export": false,
    "importPath": "backed/src/poly-loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "polyloader",
    "memberof": "src/poly-loader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/poly-loader.js~polyloader",
    "access": null,
    "export": true,
    "importPath": "backed/src/poly-loader.js",
    "importStyle": "polyloader",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "polyLoader"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "package name (folder)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "main",
        "description": "script to use"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "location of your components"
      }
    ]
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "src/utils.js",
    "content": "//\n// toJsProp\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export toJsProp\n *\n * some-prop -> someProp\n *\n * @param {string} string The content to convert\n * @return {string} string\n */\nexport const toJsProp = string => {\n  let parts = string.split('-');\n  if (parts.length > 1) {\n    var upper = parts[1].charAt(0).toUpperCase();\n    string = parts[0] + upper + parts[1].slice(1).toLowerCase();\n  }\n  return string;\n}\n/**\n* Replaces all accented chars with regular ones\n*/\nconst replaceAccents = string => {\n  // verifies if the String has accents and replace them\n  if (string.search(/[\\xC0-\\xFF]/g) > -1) {\n      string = string\n              .replace(/[\\xC0-\\xC5]/g, \"A\")\n              .replace(/[\\xC6]/g, \"AE\")\n              .replace(/[\\xC7]/g, \"C\")\n              .replace(/[\\xC8-\\xCB]/g, \"E\")\n              .replace(/[\\xCC-\\xCF]/g, \"I\")\n              .replace(/[\\xD0]/g, \"D\")\n              .replace(/[\\xD1]/g, \"N\")\n              .replace(/[\\xD2-\\xD6\\xD8]/g, \"O\")\n              .replace(/[\\xD9-\\xDC]/g, \"U\")\n              .replace(/[\\xDD]/g, \"Y\")\n              .replace(/[\\xDE]/g, \"P\")\n              .replace(/[\\xE0-\\xE5]/g, \"a\")\n              .replace(/[\\xE6]/g, \"ae\")\n              .replace(/[\\xE7]/g, \"c\")\n              .replace(/[\\xE8-\\xEB]/g, \"e\")\n              .replace(/[\\xEC-\\xEF]/g, \"i\")\n              .replace(/[\\xF1]/g, \"n\")\n              .replace(/[\\xF2-\\xF6\\xF8]/g, \"o\")\n              .replace(/[\\xF9-\\xFC]/g, \"u\")\n              .replace(/[\\xFE]/g, \"p\")\n              .replace(/[\\xFD\\xFF]/g, \"y\");\n  }\n\n  return string;\n}\n\nconst removeNonWord = string => string.replace(/[^0-9a-zA-Z\\xC0-\\xFF \\-]/g, '');\n\nconst WHITE_SPACES = [\n    ' ', '\\n', '\\r', '\\t', '\\f', '\\v', '\\u00A0', '\\u1680', '\\u180E',\n    '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004', '\\u2005', '\\u2006',\n    '\\u2007', '\\u2008', '\\u2009', '\\u200A', '\\u2028', '\\u2029', '\\u202F',\n    '\\u205F', '\\u3000'\n];\n\n/**\n* Remove chars from beginning of string.\n*/\nconst ltrim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n\n  var start = 0,\n      len = string.length,\n      charLen = chars.length,\n      found = true,\n      i, c;\n\n  while (found && start < len) {\n      found = false;\n      i = -1;\n      c = string.charAt(start);\n\n      while (++i < charLen) {\n          if (c === chars[i]) {\n              found = true;\n              start++;\n              break;\n          }\n      }\n  }\n\n  return (start >= len) ? '' : string.substr(start, len);\n}\n\n/**\n* Remove chars from end of string.\n*/\nconst rtrim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n\n  var end = string.length - 1,\n      charLen = chars.length,\n      found = true,\n      i, c;\n\n  while (found && end >= 0) {\n      found = false;\n      i = -1;\n      c = string.charAt(end);\n\n      while (++i < charLen) {\n          if (c === chars[i]) {\n              found = true;\n              end--;\n              break;\n          }\n      }\n  }\n\n  return (end >= 0) ? string.substring(0, end + 1) : '';\n}\n\n/**\n * Add space between camelCase text.\n */\nconst unCamelCase = string => {\n  string = string.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, '$1 $2');\n  string = string.toLowerCase();\n  return string;\n}\n\n/**\n * Remove white-spaces from beginning and end of string.\n */\nexport const trim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n  return ltrim(rtrim(string, chars), chars);\n}\n\n/**\n * Convert to lower case, remove accents, remove non-word chars and\n * replace spaces with the specified delimeter.\n * Does not split camelCase text.\n */\nexport const slugify = (string, delimeter) => {\n  if (delimeter == null) {\n      delimeter = \"-\";\n  }\n\n  string = replaceAccents(string);\n  string = removeNonWord(string);\n  string = trim(string) //should come after removeNonWord\n          .replace(/ +/g, delimeter) //replace spaces with delimeter\n          .toLowerCase();\n  return string;\n}\n\n/**\n* Replaces spaces with hyphens, split camelCase text, remove non-word chars, remove accents and convert to lower case.\n*/\nexport const hyphenate = string => {\n  string = unCamelCase(string);\n  return slugify(string, \"-\");\n}\n\n//\n// merge\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export merge\n *\n * some-prop -> someProp\n *\n * @param {object} object The object to merge with\n * @param {object} source The object to merge\n * @return {object} merge result\n */\nexport const merge = (object = {}, source = {}) => {\n  // deep assign\n  for (const key of Object.keys(object)) {\n    if (source[key]) {\n      Object.assign(object[key], source[key]);\n    }\n  }\n  // assign the rest\n  for (const key of Object.keys(source)) {\n    if (!object[key]) {\n      object[key] = source[key];\n    }\n  }\n  return object;\n}\n\n//\n// loadScript\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export loadScript\n *\n * defer handles loading after the document is parsed, async loads while parsing\n *\n * @param {string} src link/path to the script to load\n * @param {string} method default: 'async',  options: `defer, async, ''`\n * @param {string} type default: undefined,  options: `module, utf-8, ...`\n * @return {object} merge result\n */\n export const loadScript = (src, method = 'async', type) => {\n   return new Promise((resolve, reject) => {\n     let script = document.createElement('script');\n     script.setAttribute(method, '');\n     if (type) script.setAttribute('type', type);\n     script.onload = result => {\n       resolve(result);\n     }\n     script.onerror = error => {\n       reject(error);\n     }\n     script.src = src;\n     document.body.appendChild(script);\n   });\n }\n\n /**\n  * @mixin utils\n  * @export loadModule\n  *\n  * defer handles loading after the document is parsed, async loads while parsing\n  *\n  * @param {string} src link/path to the module to load\n  * @param {string} method default: 'async',  options: `defer, async, ''`\n  * @return {promise}\n  */\n  export const loadModule = (src, method = 'async') => {\n    return loadScript(src, method, 'module');\n  }\n\n //\n // fireEvent\n //\n\n /**\n  * @mixin backed\n  * @module utils\n  * @export fireEvent\n  *\n  * @param {string} type Name of the event\n  * @param {HTMLElement} target context\n  * @param {string|boolean|number|object|array} detail\n  */\n export const fireEvent = (type='', detail=null, target=this) => {\n   target.dispatchEvent(new CustomEvent(type, {detail: detail}));\n };\n\n\n let sheduled = false;\n const afterRenderQue = [];\n const beforeRenderQue = [];\n\n const callMethod = array => {\n   const context = array[0];\n   const callback = array[1];\n   const args = array[2];\n   try {\n     callback.apply(context, args);\n   } catch(e) {\n     setTimeout(() => {\n       throw e;\n     })\n   }\n };\n\n const flushQue = que => {\n   while (que.length) {\n     callMethod(que.shift);\n   }\n };\n\n const runQue = que => {\n   for (let i=0, l=que.length; i < l; i++) {\n     callMethod(que.shift());\n   }\n   sheduled = false;\n }\n\n const shedule = () => {\n   sheduled = true;\n   requestAnimationFrame(() => {\n     flushQue(beforeRenderQue);\n     setTimeout(() => {\n       runQue(afterRenderQue);\n     });\n   });\n };\n\n export const RenderStatus = (() => {\n   window.RenderStatus = window.RenderStatus || {\n     afterRender: (context, callback, args) => {\n       if (!sheduled) {\n         shedule();\n       }\n       afterRenderQue.push([context, callback, args]);\n     },\n     beforeRender: (context, callback, args) => {\n       if (!sheduled) {\n         shedule();\n       }\n       beforeRenderQue.push([context, callback, args]);\n     }\n   }\n })();\n\n export const shouldRegister = name => {\n   return customElements.get(name) ? false : true;\n }\n\n export const define = klass => {\n   const name = hyphenate(klass.name);\n   return shouldRegister(name) ? customElements.define(name, klass) : '';\n }\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "toJsProp",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~toJsProp",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{toJsProp}",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@mixin",
        "tagValue": "Backed"
      },
      {
        "tagName": "@module",
        "tagValue": "utils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "The content to convert"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "string"
    }
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "replaceAccents",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~replaceAccents",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": "Replaces all accented chars with regular ones",
    "lineNumber": 26
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "removeNonWord",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~removeNonWord",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "WHITE_SPACES",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~WHITE_SPACES",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "ltrim",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ltrim",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": "Remove chars from beginning of string.",
    "lineNumber": 68
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "rtrim",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~rtrim",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": "Remove chars from end of string.",
    "lineNumber": 97
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "unCamelCase",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~unCamelCase",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": "Add space between camelCase text.",
    "lineNumber": 125
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "trim",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~trim",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{trim}",
    "description": "Remove white-spaces from beginning and end of string.",
    "lineNumber": 134
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "slugify",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~slugify",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{slugify}",
    "description": "Convert to lower case, remove accents, remove non-word chars and\nreplace spaces with the specified delimeter.\nDoes not split camelCase text.",
    "lineNumber": 144
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "hyphenate",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hyphenate",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{hyphenate}",
    "description": "Replaces spaces with hyphens, split camelCase text, remove non-word chars, remove accents and convert to lower case.",
    "lineNumber": 160
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "merge",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~merge",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{merge}",
    "description": "",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@mixin",
        "tagValue": "Backed"
      },
      {
        "tagName": "@module",
        "tagValue": "utils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to merge with"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "The object to merge"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "merge result"
    }
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "loadScript",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~loadScript",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{loadScript}",
    "description": "",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@mixin",
        "tagValue": "Backed"
      },
      {
        "tagName": "@module",
        "tagValue": "utils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "link/path to the script to load"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "default: 'async',  options: `defer, async, ''`"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "default: undefined,  options: `module, utf-8, ...`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "merge result"
    }
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "loadModule",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~loadModule",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{loadModule}",
    "description": "",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@mixin",
        "tagValue": "utils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "link/path to the module to load"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "default: 'async',  options: `defer, async, ''`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "fireEvent",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~fireEvent",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{fireEvent}",
    "description": "",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@mixin",
        "tagValue": "backed"
      },
      {
        "tagName": "@module",
        "tagValue": "utils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Name of the event"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "context"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "boolean",
          "number",
          "object",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "detail",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "sheduled",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~sheduled",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 260,
    "undocument": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "afterRenderQue",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~afterRenderQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 261,
    "undocument": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "beforeRenderQue",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~beforeRenderQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 262,
    "undocument": true
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "callMethod",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~callMethod",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 264,
    "undocument": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "flushQue",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~flushQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 277,
    "undocument": true
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "runQue",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~runQue",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 283,
    "undocument": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "shedule",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~shedule",
    "access": null,
    "export": false,
    "importPath": "backed/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 290,
    "undocument": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "RenderStatus",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~RenderStatus",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{RenderStatus}",
    "description": null,
    "lineNumber": 300,
    "undocument": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "shouldRegister",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~shouldRegister",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{shouldRegister}",
    "description": null,
    "lineNumber": 317,
    "undocument": true
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "define",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~define",
    "access": null,
    "export": true,
    "importPath": "backed/src/utils.js",
    "importStyle": "{define}",
    "description": null,
    "lineNumber": 321,
    "undocument": true
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/warnings.js",
    "content": "const _warnings = [];\r\n\r\nconst warnings = {\r\n  CESV0: 'Backed uses a ready method as lifeCycleCallback, please see the documentation for more info',\r\n  CESV1: 'Backed uses a ready method as lifeCycleCallback, things should work fine when CESV1 is supported, but CESV0 not, please see the documentation for more info'\r\n};\r\n\r\nconst warn = (name, warning) => {\r\n  if (!_warnings[warning]) {\r\n    console.warn(`${name}::${warnings[warning]}`);\r\n    _warnings.push(warning);\r\n  }\r\n}\r\n\r\nexport default {\r\n  warn: warn\r\n}\r\n",
    "static": true,
    "longname": "D:/Workspace/basicelements/backed/src/warnings.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "_warnings",
    "memberof": "src/warnings.js",
    "static": true,
    "longname": "src/warnings.js~_warnings",
    "access": null,
    "export": false,
    "importPath": "backed/src/warnings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "warnings",
    "memberof": "src/warnings.js",
    "static": true,
    "longname": "src/warnings.js~warnings",
    "access": null,
    "export": false,
    "importPath": "backed/src/warnings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "warn",
    "memberof": "src/warnings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/warnings.js~warn",
    "access": null,
    "export": false,
    "importPath": "backed/src/warnings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "kind": "index",
    "content": "# backed [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]\r\n> Small web framework for quick app & component development\r\n\r\n## Features\r\n- class development without the worry of constructors and calling super\r\n- internal/scoped & global property observers, checkout [using observers]\r\n- updates property values to attributes & the otherway around, checkout [using reflect]\r\n- templating using [lit-html], checkout [using render]\r\n\r\n## Installation\r\n\r\n```sh\r\n$ bower install --save backed\r\n```\r\n\r\n```sh\r\n$ npm install --save backed\r\n```\r\n\r\n## Usage\r\n\r\n### Basic usage\r\n```js\r\nBacked(class extends HTMLElement {\r\n  ready() {\r\n    // ready to go ...\r\n  }\r\n});\r\n```\r\n\r\n### Using observers\r\n\r\n```js\r\nBacked(class extends HTMLElement {\r\n  static get properties() {\r\n    return {\r\n      name: {\r\n        observer: 'change'\r\n      }\r\n    }\r\n  }\r\n  ready() {\r\n    // ready to go ...\r\n  }\r\n  change(change) {\r\n    console.log(change);\r\n  }\r\n});\r\n```\r\n\r\n### Using reflect\r\n\r\n```js\r\nBacked(class extends HTMLElement {\r\n  static get properties() {\r\n    return {\r\n      name: {\r\n        reflect: true\r\n      }\r\n    }\r\n  }\r\n  ready() {\r\n    // ready to go ...\r\n  }\r\n});\r\n```\r\n\r\n### Using render\r\n\r\n```js\r\nBacked(class extends HTMLElement {\r\n  static get properties() {\r\n    return {\r\n      name: {\r\n        render: true,\r\n        value: 'name should go here'\r\n      },      \r\n      lastname: {\r\n        render: true\r\n        value: 'lastname should go here'\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    html`\r\n      <style></style>\r\n      <h1>${this.name}</h1>\r\n      <h2>${this.lastname}</h2>\r\n    `\r\n  }\r\n});\r\n```\r\n#### or\r\n\r\nwarning: watch out when using multiple renderers, when doing this the element will have the templateResult of the last render\r\n```js\r\nBacked(class extends HTMLElement {\r\n  static get properties() {\r\n    return {\r\n      name: {\r\n        render: 'renderName'\r\n      }\r\n    }\r\n  }\r\n  renderName() {\r\n    html`\r\n      <style></style>\r\n      <h1>${this.name}</h1>\r\n    `\r\n  }\r\n});\r\n```\r\n\r\n## More info\r\n- [wiki](https://github.com/VandeurenGlenn/backed/wiki)\r\n\r\n## Roadmap\r\n- [x] Support customElementsV1\r\n- [ ] Support commonjs (node)\r\n- [x] Add observer support\r\n- [x] Add global observer support\r\n\r\n## TODO\r\n\r\n- [ ] Add strict property support (wip)\r\n- [ ] Handle Commonjs (properties, observers, etc ...)\r\n- [ ] Bind properties & attributes (use pubsub to notify changes)\r\n- [x] Reflect properties & attributes\r\n- [ ] Add demo's\r\n- [ ] Add documentation\r\n\r\n## License\r\n\r\nCC-BY-NC-ND-4.0 © [Glenn Vandeuren]()\r\n[lit-html]: https://www.npmjs.com/package/lit-html\r\n[using observers]: README.md#using-observers\r\n[using reflect]: README.md#using-reflect\r\n[using render]: README.md#using-render\r\n[npm-image]: https://badge.fury.io/js/backed.svg\r\n[npm-url]: https://npmjs.org/package/backed\r\n[travis-image]: https://travis-ci.org/basicelements/backed.svg?branch=master\r\n[travis-url]: https://travis-ci.org/basicelements/backed\r\n[daviddm-image]: https://david-dm.org/basicelements/backed.svg?theme=shields.io\r\n[daviddm-url]: https://david-dm.org/basicelements/backed\r\n[coveralls-image]: https://coveralls.io/repos/basicelements/backed/badge.svg\r\n[coveralls-url]: https://coveralls.io/r/basicelements/backed\r\n",
    "longname": "D:\\Workspace\\basicelements\\backed\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"backed\",\r\n  \"version\": \"0.10.1\",\r\n  \"description\": \"Small web framework for quick app & component development\",\r\n  \"main\": \"backed.js\",\r\n  \"scripts\": {\r\n    \"prepublish\": \"esdoc && sh scripts/release.sh && sh scripts/gh-pages.sh\",\r\n    \"postpublish\": \"sh scripts/clean.sh\",\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"flat\": true,\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/vandeurenglenn/backed.git\"\r\n  },\r\n  \"author\": \"Glenn Vadeuren <vandeurenglenn@gmail.com>\",\r\n  \"license\": \"CC-BY-NC-ND-4.0\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/vandeurenglenn/backed/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/vandeurenglenn/backed#readme\",\r\n  \"devDependencies\": {\r\n    \"babel-preset-es2016\": \"^6.22.0\",\r\n    \"custom-app-layout\": \"^0.9.0-preview\",\r\n    \"custom-docs\": \"^0.9.0\",\r\n    \"esdoc\": \"^1.0.1\",\r\n    \"eslint\": \"^3.15.0\",\r\n    \"eslint-config-google\": \"^0.7.1\",\r\n    \"uglify-es\": \"^3.0.28\"\r\n  },\r\n  \"dependencies\": {\r\n    \"lit-html\": \"^0.7.1\"\r\n  },\r\n  \"backed\": {\r\n    \"bundles\": [\r\n      {\r\n        \"src\": \"./src/poly-loader.js\",\r\n        \"dest\": \"poly-loader.js\",\r\n        \"moduleName\": \"polyLoader\",\r\n        \"format\": \"es\",\r\n        \"plugins\": {\r\n          \"babel\": {\r\n            \"presets\": [\r\n              \"es2016\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"src\": \"./src/mixins/lit-mixin.js\",\r\n        \"dest\": \"mixins/lit-mixin.js\",\r\n        \"moduleName\": \"LitMixin\",\r\n        \"format\": \"es\",\r\n        \"plugins\": {\r\n          \"babel\": {\r\n            \"presets\": [\r\n              \"es2016\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"src\": \"./src/mixins/property-mixin.js\",\r\n        \"dest\": \"mixins/property-mixin.js\",\r\n        \"moduleName\": \"PropertyMixin\",\r\n        \"format\": \"es\",\r\n        \"plugins\": {\r\n          \"babel\": {\r\n            \"presets\": [\r\n              \"es2016\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"src\": \"./src/mixins/css-mixin.js\",\r\n        \"dest\": \"mixins/css-mixin.js\",\r\n        \"moduleName\": \"CSSMixin\",\r\n        \"format\": \"es\",\r\n        \"plugins\": {\r\n          \"babel\": {\r\n            \"presets\": [\r\n              \"es2016\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"src\": \"./src/backed.js\",\r\n        \"dest\": \"backed.js\",\r\n        \"moduleName\": \"Backed\",\r\n        \"format\": \"es\",\r\n        \"plugins\": {\r\n          \"babel\": {\r\n            \"presets\": [\r\n              \"es2016\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"esdoc\": {\r\n    \"source\": \"src/\",\r\n    \"destination\": \"docs/\"\r\n  },\r\n  \"resolutions\": {\r\n    \"babel-traverse\": \"6.26.0\",\r\n    \"babylon\": \"6.18.0\",\r\n    \"globals\": \"9.18.0\",\r\n    \"strip-ansi\": \"4.0.0\",\r\n    \"ansi-regex\": \"3.0.0\",\r\n    \"backed\": \"0.9.3\",\r\n    \"cheerio\": \"0.22.0\",\r\n    \"minimist\": \"1.2.0\",\r\n    \"entities\": \"1.1.1\",\r\n    \"htmlparser2\": \"3.9.2\",\r\n    \"domutils\": \"1.6.2\",\r\n    \"domelementtype\": \"1.3.0\",\r\n    \"domhandler\": \"2.4.1\",\r\n    \"readable-stream\": \"2.3.3\",\r\n    \"isarray\": \"1.0.0\",\r\n    \"string_decoder\": \"1.0.3\",\r\n    \"acorn\": \"5.1.2\",\r\n    \"esprima\": \"4.0.0\",\r\n    \"ajv\": \"5.2.3\",\r\n    \"boom\": \"5.2.0\",\r\n    \"string-width\": \"2.1.1\",\r\n    \"is-fullwidth-code-point\": \"2.0.0\",\r\n    \"custom-app-layout\": \"0.9.0-preview.5\",\r\n    \"lit-html\": \"0.7.1\"\r\n  }\r\n}\r\n",
    "longname": "D:\\Workspace\\basicelements\\backed\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]